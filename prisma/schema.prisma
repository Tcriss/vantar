// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String         @id @default(uuid()) @db.Uuid
  name                    String         @db.VarChar(30)
  email                   String         @unique @db.Char(100)
  password                String         @db.VarChar(130)
  created_at              DateTime       @db.Timestamp() @default(now())
  clients                 Customer[]
}

model Customer {
  id                      String         @id @default(uuid()) @db.Uuid
  name                    String         @db.VarChar(50)
  contact                 String?        @db.VarChar(150)
  active                  Boolean        @default(true)
  created_at              DateTime       @db.Timestamp() @default(now())
  companies               String[]       @db.VarChar(200)
  user_id                 String         @db.Uuid
  user                    User           @relation(fields: [user_id], references: [id])
  inventories             Inventory[]
}

model Inventory {
  id                      String         @id @default(uuid()) @db.Uuid
  company_name            String         @db.VarChar(200)
  created_at              DateTime       @db.Timestamp() @default(now())
  products_amount         Int            @db.Integer @default(0)
  service_charge          Int            @db.Integer @default(0)
  capital                 Int            @db.Integer @default(0)
  customer_id             String         @db.Uuid
  customer                Customer       @relation(fields: [customer_id], references: [id])
  products                Product[]
}

model Product {
  id                      String         @id @default(uuid()) @db.Uuid
  name                    String         @db.VarChar(30)
  stick                   Int            @db.Integer @default(0)
  price                   Int            @db.Integer
  unit_measure            String         @db.VarChar(100)
  expiration              DateTime       @db.Timestamp()
  category_name           String         @db.VarChar(30)
  inventory_id            String         @db.Uuid
  created_at              DateTime       @db.Timestamp() @default(now())
  category                Category       @relation(fields: [category_name], references: [name])
  inventoy                Inventory      @relation(fields: [inventory_id], references: [id])
}

model Category {
  id                      String         @id @default(uuid()) @db.Uuid
  name                    String         @unique @db.VarChar(30)
  description             String         @unique @db.VarChar(130)
  products                Product[]
}